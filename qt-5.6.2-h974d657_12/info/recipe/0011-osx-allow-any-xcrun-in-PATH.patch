diff -urN qtbase.orig/configure qtbase/configure
--- qtbase.orig/configure	2017-08-31 03:18:33.000000000 -0700
+++ qtbase/configure	2017-08-31 03:19:07.000000000 -0700
@@ -315,7 +315,7 @@
                 # Prefix tool with toolchain path
                 var=$(echo "$line" | cut -d '=' -f 1)
                 val=$(echo "$line" | cut -d '=' -f 2-)
-                sdk_val=$(/usr/bin/xcrun -sdk $sdk -find $(echo $val | cut -d ' ' -f 1))
+                sdk_val=$(xcrun -sdk $sdk -find $(echo $val | cut -d ' ' -f 1))
                 val=$(echo $sdk_val $(echo $val | cut -s -d ' ' -f 2-))
                 echo "$var=$val"
             ;;
@@ -543,7 +543,7 @@
         exit 2
     fi
 
-    if ! /usr/bin/xcrun -find xcodebuild >/dev/null 2>&1; then
+    if ! xcrun -find xcodebuild >/dev/null 2>&1; then
         echo >&2
         echo "   Xcode not set up properly. You may need to confirm the license" >&2
         echo "   agreement by running /usr/bin/xcodebuild without arguments." >&2
@@ -2831,7 +2831,7 @@
         # about the OS version, since we're not using the clang version that comes
         # with the system. We use 'xcrun' to check the clang version that's part of
         # the Xcode installation.
-        XCRUN=`/usr/bin/xcrun -sdk macosx clang -v 2>&1`
+        XCRUN=`xcrun -sdk macosx clang -v 2>&1`
         CLANGVERSION=`echo "$XCRUN" | sed -n 's/.*version \([0-9]\).*/\1/p'`
         expr "$CLANGVERSION" : '[0-9]' > /dev/null || { echo "Unable to determine CLANG version from output of xcrun: $XCRUN" ; exit 2 ; }
         if [ "$CLANGVERSION" -ge 3 ]; then
diff -urN qtbase.orig/mkspecs/features/mac/default_pre.prf qtbase/mkspecs/features/mac/default_pre.prf
--- qtbase.orig/mkspecs/features/mac/default_pre.prf	2017-08-31 03:18:35.000000000 -0700
+++ qtbase/mkspecs/features/mac/default_pre.prf	2017-08-31 03:19:22.000000000 -0700
@@ -12,7 +12,7 @@
         error("Xcode is not installed in $${QMAKE_XCODE_DEVELOPER_PATH}. Please use xcode-select to choose Xcode installation path.")
 
     # Make sure Xcode is set up properly
-    isEmpty($$list($$system("/usr/bin/xcrun -find xcodebuild 2>/dev/null"))): \
+    isEmpty($$list($$system("xcrun -find xcodebuild 2>/dev/null"))): \
         error("Xcode not set up properly. You may need to confirm the license agreement by running /usr/bin/xcodebuild.")
 }
 
diff -urN qtbase.orig/mkspecs/features/mac/sdk.prf qtbase/mkspecs/features/mac/sdk.prf
--- qtbase.orig/mkspecs/features/mac/sdk.prf	2017-08-31 03:18:35.000000000 -0700
+++ qtbase/mkspecs/features/mac/sdk.prf	2017-08-31 03:19:38.000000000 -0700
@@ -52,7 +52,7 @@
     value = $$eval($$tool)
     isEmpty(value): next()
 
-    sysrooted = $$system("/usr/bin/xcrun -sdk $$QMAKE_MAC_SDK -find $$first(value) 2>/dev/null")
+    sysrooted = $$system("xcrun -sdk $$QMAKE_MAC_SDK -find $$first(value) 2>/dev/null")
     isEmpty(sysrooted): next()
 
     $$tool = $$sysrooted $$member(value, 1, -1)
diff -urN qtbase.orig/configure qtbase/configure
--- qtbase.orig/configure	2017-08-31 04:18:52.000000000 -0700
+++ qtbase/configure	2017-08-31 04:24:36.000000000 -0700
@@ -292,7 +292,7 @@
 
     sdk=$(getSingleQMakeVariable "QMAKE_MAC_SDK" "$1")
     if [ -z "$sdk" ]; then echo "QMAKE_MAC_SDK must be set when building on Mac" >&2; exit 1; fi
-    sysroot=$(/usr/bin/xcodebuild -sdk $sdk -version Path 2>/dev/null)
+    sysroot=$(xcodebuild -sdk $sdk -version Path 2>/dev/null)
     if [ -z "$sysroot" ]; then echo "Failed to resolve SDK path for '$sdk'" >&2; exit 1; fi
 
     case "$sdk" in
diff -urN qtbase.orig/mkspecs/features/mac/sdk.prf qtbase/mkspecs/features/mac/sdk.prf
--- qtbase.orig/mkspecs/features/mac/sdk.prf	2017-08-31 04:18:57.000000000 -0700
+++ qtbase/mkspecs/features/mac/sdk.prf	2017-08-31 04:29:06.000000000 -0700
@@ -6,7 +6,7 @@
     error("QMAKE_MAC_SDK can only contain short-form SDK names (eg. macosx, iphoneos)")
 
 isEmpty(QMAKE_MAC_SDK.$${QMAKE_MAC_SDK}.path) {
-    QMAKE_MAC_SDK_PATH = $$system("/usr/bin/xcodebuild -sdk $$QMAKE_MAC_SDK -version Path 2>/dev/null")
+    QMAKE_MAC_SDK_PATH = $$system("xcodebuild -sdk $$QMAKE_MAC_SDK -version Path 2>/dev/null")
     isEmpty(QMAKE_MAC_SDK_PATH): error("Could not resolve SDK path for \'$$QMAKE_MAC_SDK\'")
     cache(QMAKE_MAC_SDK.$${QMAKE_MAC_SDK}.path, set stash, QMAKE_MAC_SDK_PATH)
 } else {
@@ -14,7 +14,7 @@
 }
 
 isEmpty(QMAKE_MAC_SDK.$${QMAKE_MAC_SDK}.platform_path) {
-    QMAKE_MAC_SDK_PLATFORM_PATH = $$system("/usr/bin/xcodebuild -sdk $$QMAKE_MAC_SDK -version PlatformPath 2>/dev/null")
+    QMAKE_MAC_SDK_PLATFORM_PATH = $$system("xcodebuild -sdk $$QMAKE_MAC_SDK -version PlatformPath 2>/dev/null")
     isEmpty(QMAKE_MAC_SDK_PLATFORM_PATH): error("Could not resolve SDK platform path for \'$$QMAKE_MAC_SDK\'")
     cache(QMAKE_MAC_SDK.$${QMAKE_MAC_SDK}.platform_path, set stash, QMAKE_MAC_SDK_PLATFORM_PATH)
 } else {
@@ -22,7 +22,7 @@
 }
 
 isEmpty(QMAKE_MAC_SDK.$${QMAKE_MAC_SDK}.version) {
-    QMAKE_MAC_SDK_VERSION = $$system("/usr/bin/xcodebuild -sdk $$QMAKE_MAC_SDK -version SDKVersion 2>/dev/null")
+    QMAKE_MAC_SDK_VERSION = $$system("xcodebuild -sdk $$QMAKE_MAC_SDK -version SDKVersion 2>/dev/null")
     isEmpty(QMAKE_MAC_SDK_VERSION): error("Could not resolve SDK version for \'$$QMAKE_MAC_SDK\'")
     cache(QMAKE_MAC_SDK.$${QMAKE_MAC_SDK}.version, set stash, QMAKE_MAC_SDK_VERSION)
 } else {
diff -urN qtbase.orig/mkspecs/features/mac/default_pre.prf qtbase/mkspecs/features/mac/default_pre.prf
--- qtbase.orig/mkspecs/features/mac/default_pre.prf	2017-08-31 04:46:10.000000000 -0700
+++ qtbase/mkspecs/features/mac/default_pre.prf	2017-08-31 04:46:32.000000000 -0700
@@ -18,7 +18,7 @@
 
 isEmpty(QMAKE_XCODE_VERSION) {
     # Extract Xcode version using xcodebuild
-    xcode_version = $$system("/usr/bin/xcodebuild -version")
+    xcode_version = $$system("xcodebuild -version")
     QMAKE_XCODE_VERSION = $$member(xcode_version, 1)
     isEmpty(QMAKE_XCODE_VERSION): error("Could not resolve Xcode version.")
     unset(xcode_version)
